<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <PageId>c3cfed4e-e824-4e1f-b6ed-547d464b186d</PageId>
  <Text>{\rtf1\ansi\ansicpg949\deff0\deflang1033\deflangfe1042{\fonttbl{\f0\fmodern\fprq1\fcharset129 \'b1\'bc\'b8\'b2;}{\f1\fnil\fcharset0 Microsoft Sans Serif;}}
\viewkind4\uc1\pard\lang1042\f0\fs18 - (*)\'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba \'bb\'f3\'c5\'c2\'c0\'fc\'c0\'cc\par
  -New(\'bb\'fd\'bc\'ba), Ready(\'c1\'d8\'ba\'f1), Running(\'bd\'c7\'c7\'e0), Blocked(\'b4\'eb\'b1\'e2), Terminated(\'c1\'be\'b7\'e1)\'b7\'ce \'b3\'aa\'b4\'b5\'b8\'e7\par
  (*)\'bb\'fd\'bc\'ba(New): \'c1\'a6\'c0\'cf \'c3\'b9\'b9\'f8\'c2\'b0\'b7\'ce New\'bf\'a1\'bc\'ad Ready\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'c7\'b4\'c2 \'b0\'fa\'c1\'a4\'c0\'d4\'b4\'cf\'b4\'d9. \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'c7\'b0\'ed \'b3\'aa\'bc\'ad \'bb\'fd\'bc\'ba\'b5\'c8 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'c1\'d8\'ba\'f1(Ready) \'bb\'f3\'c5\'c2\'bf\'a1 \'b8\'d3\'b9\'b4\'b4\'cf\'b4\'d9. \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'b4\'c2 \par
CPU\'b8\'a6 \'c1\'a1\'c0\'af\'c7\'cf\'b0\'ed \'c0\'d6\'b4\'c2 \'bb\'f3\'c5\'c2\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3, CPU\'b8\'a6 \'c1\'a1\'c0\'af\'c7\'cf\'b1\'e6 \'c8\'f1\'b8\'c1\'c7\'cf\'b4\'c2 \'bb\'f3\'c5\'c2\'c0\'d4\'b4\'cf\'b4\'d9. \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'b7\'ce \'b3\'d1\'be\'ee\'b0\'a1\'b7\'c1\'b8\'e9 \'c0\'db\'be\'f7 \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b0\'a1 \'bc\'b1\'c5\'c3\'c7\'d8 \'c1\'d6\'be\'ee\'be\'df\'b8\'b8 \'c7\'d5\'b4\'cf\'b4\'d9.\par
  (*)\'b5\'f0\'bd\'ba\'c6\'d0\'c4\'a1(Dispatch): \'b5\'f0\'bd\'ba\'c6\'d0\'c4\'a1\'b6\'f5 \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'c7\'b4\'c2 \'b0\'fa\'c1\'a4\'c0\'bb \'b8\'bb\'c7\'cf\'b8\'e7, \'c0\'cc\'b4\'c2 \'c0\'db\'be\'f7 \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b0\'a1 \'c7\'d8\'b4\'e7 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'bf\'a9 \'bd\'c7\'c7\'e0\'b5\'c7\'be\'ee\'c1\'f6\'b4\'c2 \'b0\'cd\'c0\'b8\'b7\'ce,\par
 \'c0\'cc\'b6\'a7 \'bd\'c7\'c7\'e0\'b5\'c8 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 CPU\'b8\'a6 \'c1\'a1\'c0\'af\'c7\'cf\'b0\'d4 \'b5\'cb\'b4\'cf\'b4\'d9\par
  (*)\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae(Interrupt): \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bd\'c5\'c8\'a3\'b8\'a6 \'b9\'de\'b0\'d4\'b5\'c7\'b8\'e9, \'bd\'c7\'c7\'e0\'c1\'df\'c0\'cc\'b4\'f8 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'c7\'b0\'ed, \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7(Priority)\'b0\'a1 \'b3\'f4\'c0\'ba \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b8\'a6 \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
 (\'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'b0\'a2\'b0\'a2 \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7\'b8\'a6 \'ba\'ce\'bf\'a9\'b9\'de\'b0\'ed, \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7\'bf\'a1 \'b5\'fb\'b6\'f3 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'c7\'b0\'c5\'b3\'aa, \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'cb\'b4\'cf\'b4\'d9.)\par
  (*)\'c0\'d4\'c3\'e2\'b7\'c2 \'c8\'a4\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2(I/O or event wait): CPU\'b8\'a6 \'c1\'a1\'c0\'af\'c7\'cf\'b0\'ed \'c0\'d6\'b4\'c2 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'c0\'d4\'c3\'e2\'b7\'c2 \'c3\'b3\'b8\'ae\'b8\'a6 \'c7\'d8\'be\'df\'b8\'b8 \'c7\'cf\'b4\'c2 \'bb\'f3\'c8\'b2\'c0\'cc\'b6\'f3\'b8\'e9, \'bd\'c7\'c7\'e0\'b5\'c7\'b0\'ed \'c0\'d6\'b4\'c2 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \par
\'b4\'eb\'b1\'e2/\'ba\'b8\'b7\'f9 \'bb\'f3\'c5\'c2\'b7\'ce \'b9\'d9\'b2\'f2\'b4\'cf\'b4\'d9. \'b1\'d7\'b8\'ae\'b0\'ed \'b4\'eb\'b1\'e2 \'bb\'f3\'c5\'c2\'b7\'ce \'b9\'d9\'b2\'ef \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'c0\'d4\'c3\'e2\'b7\'c2 \'c3\'b3\'b8\'ae\'b0\'a1 \'b8\'f0\'b5\'ce \'b3\'a1\'b3\'af\'b6\'a7\'b1\'ee\'c1\'f6 \'b4\'eb\'b1\'e2 \'bb\'f3\'c5\'c2\'b7\'ce \'b8\'d3\'b9\'b4\'b4\'cf\'b4\'d9. \'b1\'d7\'b8\'ae\'b0\'ed \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'c0\'cc\'b4\'f8 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'b4\'eb\'b1\'e2 \'bb\'f3\'c5\'c2\'b7\'ce\par
 \'c0\'fc\'c0\'cc\'b5\'ca\'b0\'fa \'c7\'d4\'b2\'b2, \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'c0\'cc\'b4\'f8 \'b6\'c7\'b4\'d9\'b8\'a5 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'bd\'c7\'c7\'e0 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'cb\'b4\'cf\'b4\'d9. \'b6\'c7\'c7\'d1 \'b4\'eb\'b1\'e2 \'bb\'f3\'c5\'c2\'c0\'ce \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7\'b0\'a1 \'ba\'ce\'bf\'a9\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e7 \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'b1\'c5\'c3\'b5\'c9 \'bc\'f6\par
 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
  (*)\'c0\'d4\'c3\'e2\'b7\'c2 \'c8\'a4\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'bf\'cf\'b7\'e1(I/O or event completion): \'c0\'d4\'c3\'e2\'b7\'c2 \'c3\'b3\'b8\'ae\'b0\'a1 \'b3\'a1\'b3\'ad \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b4\'c2 \'b4\'eb\'b1\'e2 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \'c1\'d8\'ba\'f1 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c0\'cc\'b5\'c7\'be\'ee \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'bf\'a1\'b0\'d4 \'bc\'b1\'c5\'c3\'b5\'c9 \'bc\'f6 \'c0\'d6\'b0\'d4 \'b5\'cb\'b4\'cf\'b4\'d9.\par
\pard  \'c3\'df\'b0\'a1\'b7\'ce \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b8\'a6 \'c1\'be\'b7\'e1(Terminate)\'bd\'c3\'c5\'b3 \'b6\'a7\'bf\'a1\'b5\'b5 Blocked \'bb\'f3\'c5\'c2\'b8\'a6 \'b0\'c5\'c4\'a5 \'bc\'f6 \'c0\'d6\'b4\'d9\'b4\'c2 \'bb\'e7\'bd\'c7\'c0\'bb \'b1\'e2\'be\'ef\'c7\'d8 \'b5\'ce\'bd\'c3\'b1\'e6 \'b9\'d9\'b6\'f8\'b4\'cf\'b4\'d9.\f1\fs20\par
}
&#x0;</Text>
  <Encrypted>false</Encrypted>
  <Name>프로세스 상태전이</Name>
  <CreatedBy>Anonymous</CreatedBy>
  <CreatedOn>2017-03-21T22:31:12.560591+09:00</CreatedOn>
  <UpdatedBy>Anonymous</UpdatedBy>
  <UpdatedOn>2017-03-21T22:31:26.1001484+09:00</UpdatedOn>
  <Words>- (*)프로세스 상태전이
  -New(생성), Ready(준비), Running(실행), Blocked(대기), Terminated(종료)로 나뉘며
  (*)생성(New): 제일 첫번째로 New에서 Ready로 전이되는 과정입니다. 프로세스가 생성되고 나서 생성된 프로세스는 준비(Ready) 상태에 머뭅니다. 준비 상태는 
CPU를 점유하고 있는 상태가 아니라, CPU를 점유하길 희망하는 상태입니다. 준비 상태에서 실행 상태로 넘어가려면 작업 스케줄러가 선택해 주어야만 합니다.
  (*)디스패치(Dispatch): 디스패치란 준비 상태에서 실행 상태로 전이되는 과정을 말하며, 이는 작업 스케줄러가 해당 프로세스를 선택하여 실행되어지는 것으로,
 이때 실행된 프로세스가 CPU를 점유하게 됩니다
  (*)인터럽트(Interrupt): 인터럽트 신호를 받게되면, 실행중이던 프로세스는 준비 상태로 전이되고, 우선순위(Priority)가 높은 프로세스를 실행 상태로 전이시킵니다.
 (프로세스는 각각 우선순위를 부여받고, 우선순위에 따라 프로세스가 준비 상태로 전이되거나, 실행 상태로 전이됩니다.)
  (*)입출력 혹은 이벤트 대기(I/O or event wait): CPU를 점유하고 있는 프로세스가 입출력 처리를 해야만 하는 상황이라면, 실행되고 있는 프로세스는 실행 상태에서 
대기/보류 상태로 바뀝니다. 그리고 대기 상태로 바뀐 프로세스는 입출력 처리가 모두 끝날때까지 대기 상태로 머뭅니다. 그리고 실행 상태이던 프로세스가 대기 상태로
 전이됨과 함께, 준비 상태이던 또다른 프로세스가 실행 상태로 전이됩니다. 또한 대기 상태인 프로세스는 우선순위가 부여되지 않으며 스케줄러에 의해 선택될 수
 없습니다.
  (*)입출력 혹은 이벤트 완료(I/O or event completion): 입출력 처리가 끝난 프로세스는 대기 상태에서 준비 상태로 전이되어 스케줄러에게 선택될 수 있게 됩니다.
 추가로 프로세스를 종료(Terminate)시킬 때에도 Blocked 상태를 거칠 수 있다는 사실을 기억해 두시길 바랍니다.</Words>
  <PublishedOn>0001-01-01T00:00:00</PublishedOn>
  <PublishedUrl />
  <PublishedService>0</PublishedService>
</Page>